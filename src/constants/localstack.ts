export const LOCALSTACK_AWS_SERVICES = {
  acm: "acm",
  apigateway: "apigateway",
  cloudformation: "cloudformation",
  cloudwatch: "cloudwatch",
  config: "config",
  dynamodb: "dynamodb",
  dynamodbstreams: "dynamodbstreams",
  ec2: "ec2",
  es: "es",
  events: "events",
  firehose: "firehose",
  iam: "iam",
  kinesis: "kinesis",
  kms: "kms",
  lambda: "lambda",
  logs: "logs",
  opensearch: "opensearch",
  redshift: "redshift",
  resourceGroups: "resource-groups",
  resourcegroupstaggingapi: "resourceGroupStaggingApi",
  route53: "route53",
  route53resolver: "route53resolver",
  s3: "s3",
  s3control: "s3control",
  secretsmanager: "secretsmanager",
  ses: "ses",
  sns: "sns",
  sqs: "sqs",
  ssm: "ssm",
  stepfunctions: "stepfunctions",
  sts: "sts",
  support: "support",
  swf: "swf",
  transcribe: "transcribe",
  amplify: "amplify",
  apigatewaymanagementapi: "apigatewaymanagementapi",
  apigatewayv2: "apigatewayv2",
  appconfig: "appconfig",
  applicationAutoscaling: "application-autoscaling",
  appsync: "appsync",
  athena: "athena",
  autoscaling: "autoscaling",
  azure: "azure",
  backup: "backup",
  batch: "batch",
  ce: "ce",
  cloudfront: "cloudfront",
  cloudtrail: "cloudtrail",
  codecommit: "codecommit",
  cognitoIdentity: "cognit-identity",
  cognitoIdp: "cognito-idp",
  docdb: "docdb",
  ecr: "ecr",
  ecs: "ecs",
  efs: "efs",
  eks: "eks",
  elasticache: "elasticache",
  elasticbeanstalk: "elasticbeanstalk",
  elb: "elb",
  elbv2: "elbv2",
  emr: "emr",
  fis: "fis",
  glacier: "glacier",
  glue: "glue",
  iotData: "iot-data",
  iot: "iot",
  iotanalytics: "iotanalytics",
  iotwireless: "iotwireless",
  kafka: "kafka",
  kinesisanalytics: "kinesisanalytics",
  kinesisanalyticsv2: "kinesisanalyticsv2",
  lakeformation: "lakeformation",
  mediastoreData: "mediastore-data",
  mediastore: "mediastore",
  mq: "mq",
  mwaa: "mwaa",
  neptune: "neptune",
  organizations: "organizations",
  qldbSession: "qldb-session",
  qldb: "qldb",
  rdsData: "rds-data",
  rds: "rds",
  redshiftData: "redshift-data",
  sagemakerRuntime: "sagemaker-runtime",
  sagemaker: "sagemaker",
  serverlessrepo: "serverlessrepo",
  servicediscovery: "servicediscovery",
  sesv2: "sesv2",
  timestreamQuery: "timestream-query",
  timestreamWrite: "timestream-write",
  transfer: "transfer",
  xray: "xray",
}
